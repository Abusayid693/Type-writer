{"ast":null,"code":"/*********** Handling Image capture ******************/\nexport default function imageCapture() {\n  window.addEventListener(\"paste\", function (e) {\n    var elem = document.activeElement,\n        imgs = e.clipboardData.items,\n        c = document.createElement(\"canvas\"),\n        p = document.createElement(\"p\"),\n        $ = c.getContext(\"2d\"); //   detecting clipboard item image or not\n\n    if (e.clipboardData.files.length > 0 && elem.classList.contains(\"main\")) {\n      //   Handaling clipboard event to pasta image to a new canvas next to\n      //   current active element\n      if (imgs == undefined) return false;\n\n      for (var i = 0; i < imgs.length; i++) {\n        if (imgs[i].type.indexOf(\"image\") == -1) continue;\n        var imgObj = imgs[i].getAsFile();\n        var url = window.URL || window.webkitURL;\n        var src = url.createObjectURL(imgObj);\n        $.clearRect(0, 0, this.width, this.height);\n        loadImage(src, $, c);\n      }\n\n      p.classList.add(\"main\");\n      c.classList.add(\"main\");\n      c.classList.add(\"img\");\n      p.contentEditable = \"true\";\n      c.contentEditable = \"true\";\n      elem.parentNode.insertBefore(c, elem.nextSibling);\n      c.parentNode.insertBefore(p, c.nextSibling);\n      p.focus();\n      e.preventDefault();\n    } else {\n      return;\n    }\n  }); // Drawing image and setting canvas width and height\n\n  function loadImage(src, $, c) {\n    var img = new Image();\n\n    img.onload = function (e) {\n      c.width = this.width;\n      c.height = this.height;\n      $.drawImage(img, 0, 0);\n    };\n\n    img.src = src;\n  }\n}","map":{"version":3,"sources":["/Users/rehanchoudhury/Projects/type-writer/src/components/ClipboardAPI.js"],"names":["imageCapture","window","addEventListener","e","elem","document","activeElement","imgs","clipboardData","items","c","createElement","p","$","getContext","files","length","classList","contains","undefined","i","type","indexOf","imgObj","getAsFile","url","URL","webkitURL","src","createObjectURL","clearRect","width","height","loadImage","add","contentEditable","parentNode","insertBefore","nextSibling","focus","preventDefault","img","Image","onload","drawImage"],"mappings":"AAAA;AAEA,eAAe,SAASA,YAAT,GAAwB;AACrCC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,UAAUC,CAAV,EAAa;AAC5C,QAAIC,IAAI,GAAGC,QAAQ,CAACC,aAApB;AAAA,QACEC,IAAI,GAAGJ,CAAC,CAACK,aAAF,CAAgBC,KADzB;AAAA,QAEEC,CAAC,GAAGL,QAAQ,CAACM,aAAT,CAAuB,QAAvB,CAFN;AAAA,QAGEC,CAAC,GAAGP,QAAQ,CAACM,aAAT,CAAuB,GAAvB,CAHN;AAAA,QAIEE,CAAC,GAAGH,CAAC,CAACI,UAAF,CAAa,IAAb,CAJN,CAD4C,CAO5C;;AACA,QAAIX,CAAC,CAACK,aAAF,CAAgBO,KAAhB,CAAsBC,MAAtB,GAA+B,CAA/B,IAAoCZ,IAAI,CAACa,SAAL,CAAeC,QAAf,CAAwB,MAAxB,CAAxC,EAAyE;AACvE;AACA;AACA,UAAIX,IAAI,IAAIY,SAAZ,EAAuB,OAAO,KAAP;;AACvB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,IAAI,CAACS,MAAzB,EAAiCI,CAAC,EAAlC,EAAsC;AACpC,YAAIb,IAAI,CAACa,CAAD,CAAJ,CAAQC,IAAR,CAAaC,OAAb,CAAqB,OAArB,KAAiC,CAAC,CAAtC,EAAyC;AACzC,YAAIC,MAAM,GAAGhB,IAAI,CAACa,CAAD,CAAJ,CAAQI,SAAR,EAAb;AACA,YAAIC,GAAG,GAAGxB,MAAM,CAACyB,GAAP,IAAczB,MAAM,CAAC0B,SAA/B;AACA,YAAIC,GAAG,GAAGH,GAAG,CAACI,eAAJ,CAAoBN,MAApB,CAAV;AACAV,QAAAA,CAAC,CAACiB,SAAF,CAAY,CAAZ,EAAe,CAAf,EAAkB,KAAKC,KAAvB,EAA8B,KAAKC,MAAnC;AACAC,QAAAA,SAAS,CAACL,GAAD,EAAMf,CAAN,EAASH,CAAT,CAAT;AACD;;AACDE,MAAAA,CAAC,CAACK,SAAF,CAAYiB,GAAZ,CAAgB,MAAhB;AACAxB,MAAAA,CAAC,CAACO,SAAF,CAAYiB,GAAZ,CAAgB,MAAhB;AACAxB,MAAAA,CAAC,CAACO,SAAF,CAAYiB,GAAZ,CAAgB,KAAhB;AACAtB,MAAAA,CAAC,CAACuB,eAAF,GAAoB,MAApB;AACAzB,MAAAA,CAAC,CAACyB,eAAF,GAAoB,MAApB;AACA/B,MAAAA,IAAI,CAACgC,UAAL,CAAgBC,YAAhB,CAA6B3B,CAA7B,EAAgCN,IAAI,CAACkC,WAArC;AACA5B,MAAAA,CAAC,CAAC0B,UAAF,CAAaC,YAAb,CAA0BzB,CAA1B,EAA6BF,CAAC,CAAC4B,WAA/B;AACA1B,MAAAA,CAAC,CAAC2B,KAAF;AACApC,MAAAA,CAAC,CAACqC,cAAF;AACD,KArBD,MAqBO;AACL;AACD;AACF,GAhCD,EADqC,CAmCrC;;AACA,WAASP,SAAT,CAAmBL,GAAnB,EAAwBf,CAAxB,EAA2BH,CAA3B,EAA8B;AAC5B,QAAI+B,GAAG,GAAG,IAAIC,KAAJ,EAAV;;AACAD,IAAAA,GAAG,CAACE,MAAJ,GAAa,UAAUxC,CAAV,EAAa;AACxBO,MAAAA,CAAC,CAACqB,KAAF,GAAU,KAAKA,KAAf;AACArB,MAAAA,CAAC,CAACsB,MAAF,GAAW,KAAKA,MAAhB;AACAnB,MAAAA,CAAC,CAAC+B,SAAF,CAAYH,GAAZ,EAAiB,CAAjB,EAAoB,CAApB;AACD,KAJD;;AAKAA,IAAAA,GAAG,CAACb,GAAJ,GAAUA,GAAV;AACD;AACF","sourcesContent":["/*********** Handling Image capture ******************/\n\nexport default function imageCapture() {\n  window.addEventListener(\"paste\", function (e) {\n    var elem = document.activeElement,\n      imgs = e.clipboardData.items,\n      c = document.createElement(\"canvas\"),\n      p = document.createElement(\"p\"),\n      $ = c.getContext(\"2d\");\n\n    //   detecting clipboard item image or not\n    if (e.clipboardData.files.length > 0 && elem.classList.contains(\"main\")) {\n      //   Handaling clipboard event to pasta image to a new canvas next to\n      //   current active element\n      if (imgs == undefined) return false;\n      for (var i = 0; i < imgs.length; i++) {\n        if (imgs[i].type.indexOf(\"image\") == -1) continue;\n        var imgObj = imgs[i].getAsFile();\n        var url = window.URL || window.webkitURL;\n        var src = url.createObjectURL(imgObj);\n        $.clearRect(0, 0, this.width, this.height);\n        loadImage(src, $, c);\n      }\n      p.classList.add(\"main\");\n      c.classList.add(\"main\");\n      c.classList.add(\"img\");\n      p.contentEditable = \"true\";\n      c.contentEditable = \"true\";\n      elem.parentNode.insertBefore(c, elem.nextSibling);\n      c.parentNode.insertBefore(p, c.nextSibling);\n      p.focus();\n      e.preventDefault();\n    } else {\n      return;\n    }\n  });\n\n  // Drawing image and setting canvas width and height\n  function loadImage(src, $, c) {\n    var img = new Image();\n    img.onload = function (e) {\n      c.width = this.width;\n      c.height = this.height;\n      $.drawImage(img, 0, 0);\n    };\n    img.src = src;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}