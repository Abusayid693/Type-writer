{"ast":null,"code":"var i = 0,\n    b = 0;\n\nfunction italicANDbold(e) {\n  if (e.keyCode == 96 && !i && b) {\n    cursive(e, \"both\");\n    i = 1;\n  }\n\n  if (e.keyCode == 42 && i && !b) {\n    cursive(e, \"both\");\n    b = 1;\n  } //   Returning to normal from italics\n\n\n  if ((e.keyCode == 96 || e.keyCode == 42) && i | b) {\n    cursive(e, \"normal\");\n    i = 0, b = 0;\n  } //   Normal to italics\n  else if (e.keyCode == 96 && !i && !b) {\n      cursive(e, \"italic\");\n      stack.push(\"i\");\n      i = 1;\n    } //   Normal to bold\n    else if (e.keyCode == 42 && !b && !i) {\n        cursive(e, \"bold\");\n        stack.push(\"b\");\n        b = 1;\n      }\n}\n\nfunction cursive(e, type) {\n  var elem = document.activeElement,\n      parent = elem.parentNode,\n      pn;\n  e.preventDefault();\n\n  if (elem.nodeName == \"LI\") {\n    assign(elem, type);\n    return;\n  } else {\n    pn = document.createElement(elem.nodeName);\n    pn.classList.add(\"main\");\n  }\n\n  assign(pn, type);\n  pn.contentEditable = \"true\";\n  pn.style.display = \"inline\";\n  elem.style.display = \"inline\";\n  elem.parentNode.insertBefore(pn, elem.nextSibling);\n  pn.focus();\n}\n/******** Function for assigning bold and italics contents *********/\n\n\nfunction assign(pn, type) {\n  if (type == \"both\") {\n    pn.style.fontWeight = \"bold\";\n    pn.style.fontStyle = \"italic\";\n  } else if (type == \"normal\") {\n    return;\n  } else {\n    let a = type == \"bold\" ? pn.style.fontWeight = type : pn.style.fontStyle = type;\n  }\n}\n\nexport { italicANDbold };","map":{"version":3,"sources":["/Users/rehanchoudhury/Projects/type-writer/src/js/text_format.js"],"names":["i","b","italicANDbold","e","keyCode","cursive","stack","push","type","elem","document","activeElement","parent","parentNode","pn","preventDefault","nodeName","assign","createElement","classList","add","contentEditable","style","display","insertBefore","nextSibling","focus","fontWeight","fontStyle","a"],"mappings":"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","sourcesContent":["\nvar i=0,\n    b=0;\n\nfunction italicANDbold(e){\n    if (e.keyCode == 96 && !i && b)\n    {\n      cursive(e,\"both\");\n      i=1;\n    }\n  if (e.keyCode == 42 && i && !b)\n    {\n      cursive(e,\"both\");\n      b=1;\n    }  \n//   Returning to normal from italics\n  if( (e.keyCode == 96 || e.keyCode == 42) && (i | b)){\n    cursive(e,\"normal\");\n    i=0,b=0;\n  }\n\n//   Normal to italics\n  else if(e.keyCode == 96 && !i && !b )\n    {\n      cursive(e,\"italic\");\n      stack.push(\"i\");\n      i=1;\n    }\n//   Normal to bold\n  else if(e.keyCode == 42 && !b && !i)\n     {\n     cursive(e,\"bold\");\n     stack.push(\"b\");\n     b=1;  \n     } \n}\n\n\nfunction cursive(e,type){\n \n  var elem=document.activeElement,\n      parent=elem.parentNode,\n      pn;\n     \n    e.preventDefault();  \n      if (elem.nodeName==\"LI\"){\n         assign(elem,type)\n         return;\n       }\n      else {\n         pn = document.createElement(elem.nodeName);\n         pn.classList.add(\"main\");\n      }\n  \n     assign(pn,type) \n     pn.contentEditable=\"true\";\n     pn.style.display=\"inline\";\n     elem.style.display=\"inline\"; \n     elem.parentNode.insertBefore(pn, elem.nextSibling);\n     pn.focus();\n} \n\n/******** Function for assigning bold and italics contents *********/\n\nfunction assign(pn,type){\n    if(type==\"both\")\n    {\n     pn.style.fontWeight=\"bold\";\n     pn.style.fontStyle=\"italic\";\n   }\n  else if(type==\"normal\")\n  {\n    return;\n  }\n  else{\n    let a= (type==\"bold\")?pn.style.fontWeight=type:pn.style.fontStyle=type;\n  }\n}\n\n\nexport {italicANDbold}"]},"metadata":{},"sourceType":"module"}