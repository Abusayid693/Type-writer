{"ast":null,"code":"var _jsxFileName = \"/Users/rehanchoudhury/Projects/type-writer/src/components/c-panel/control.jsx\";\nimport React from 'react';\nimport \"./control.css\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\nconst customStyles = {\n  option: (provided, state) => ({ ...provided,\n    color: 'white',\n    backgroundColor: 'black',\n    padding: 10,\n    marginTop: 30\n  })\n};\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: null\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      }, function () {\n        var a = this.state.selectedOption;\n        alert(a.value);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  initialize() {// alert(\"script initialised\")\n  }\n\n  render() {\n    const {\n      selectedOption\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        styles: customStyles,\n        className: \"drop\",\n        value: selectedOption,\n        onChange: this.handleChange,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/Users/rehanchoudhury/Projects/type-writer/src/components/c-panel/control.jsx"],"names":["React","Select","options","value","label","customStyles","option","provided","state","color","backgroundColor","padding","marginTop","Container","Component","constructor","props","selectedOption","handleChange","setState","a","alert","componentDidMount","initialize","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AAAEC,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CADY,EAEZ;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFY,EAGZ;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHY,CAAhB;AAOE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CAACC,QAAD,EAAWC,KAAX,MAAsB,EAC1B,GAAGD,QADuB;AAE1BE,IAAAA,KAAK,EAAE,OAFmB;AAG1BC,IAAAA,eAAe,EAAE,OAHS;AAI1BC,IAAAA,OAAO,EAAE,EAJiB;AAK3BC,IAAAA,SAAS,EAAC;AALiB,GAAtB;AADW,CAArB;;AAWF,MAAMC,SAAN,SAAwBb,KAAK,CAACc,SAA9B,CACA;AAIGC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAHjBR,KAGiB,GAHT;AACJS,MAAAA,cAAc,EAAE;AADZ,KAGS;;AAAA,SAalBC,YAbkB,GAaFD,cAAD,IAAoB;AAClC,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd,EAAkC,YAAU;AAC5C,YAAIG,CAAC,GAAG,KAAKZ,KAAL,CAAWS,cAAnB;AACAI,QAAAA,KAAK,CAACD,CAAC,CAACjB,KAAH,CAAL;AACC,OAHD;AAID,KAlBkB;AAEjB;;AAGDmB,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,UAAL;AACA;;AAEDA,EAAAA,UAAU,GAAG,CACR;AACJ;;AAaDC,EAAAA,MAAM,GAAG;AAIN,UAAM;AAAEP,MAAAA;AAAF,QAAqB,KAAKT,KAAhC;AAEC,wBACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BAKD,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEH,YAAhB;AACC,QAAA,SAAS,EAAC,MADX;AAEC,QAAA,KAAK,EAAEY,cAFR;AAGC,QAAA,QAAQ,EAAE,KAAKC,YAHhB;AAIC,QAAA,OAAO,EAAEhB;AAJV;AAAA;AAAA;AAAA;AAAA;AALC;AAAA;AAAA;AAAA;AAAA,YADD;AAkBH;;AApDJ;;AAwEA,eAAeW,SAAf","sourcesContent":["import React from 'react';\nimport \"./control.css\"\nimport Select from 'react-select';\n\nconst options = [\n    { value: 'chocolate', label: 'Chocolate' },\n    { value: 'strawberry', label: 'Strawberry' },\n    { value: 'vanilla', label: 'Vanilla' },\n  ];\n\n\n  const customStyles = {\n    option: (provided, state) => ({\n        ...provided,\n        color: 'white',\n        backgroundColor: 'black',\n        padding: 10,\n       marginTop:30\n      }),\n\n  }\n\nclass Container extends React.Component\n{\n    state = {\n        selectedOption: null,\n      };\n   constructor(props){\n       super(props);\n   }\n \n   \n   componentDidMount() {\n    this.initialize();\n   }\n  \n   initialize() {\n        // alert(\"script initialised\")\n   }\n\n   handleChange = (selectedOption) => {\n    this.setState({ selectedOption }, function(){\n    var a = this.state.selectedOption;\n    alert(a.value)\n    });\n  };\n\n\n\n\n\n   render() {\n\n  \n\n      const { selectedOption } = this.state;\n  \n       return(\n        <div className=\"panel\">\n\n\n        \n\n       <Select styles={customStyles}\n        className=\"drop\"\n        value={selectedOption}\n        onChange={this.handleChange}\n        options={options}\n      />\n\n\n\n\n        </div>\n       );\n   }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default Container"]},"metadata":{},"sourceType":"module"}