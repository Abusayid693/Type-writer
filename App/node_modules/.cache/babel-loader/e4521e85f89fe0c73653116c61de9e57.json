{"ast":null,"code":"var _jsxFileName = \"/Users/rehanchoudhury/Projects/type-writer/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nwindow.addEventListener('paste', function (e) {\n  var elem = document.activeElement,\n      imgs = e.clipboardData.items,\n      c = document.createElement(\"canvas\"),\n      //  c = <canvas></canvas>,\n  //  p = document.createElement(\"p\"),\n  p = /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this),\n      $ = c.getContext(\"2d\"); //   detecting clipboard item image or not\n\n\n  if (e.clipboardData.files.length > 0 && elem.classList.contains(\"main\")) {\n    //   Handaling clipboard event to pasta image to a new canvas next to\n    //   current active element   \n    if (imgs == undefined) return false;\n\n    for (var i = 0; i < imgs.length; i++) {\n      if (imgs[i].type.indexOf(\"image\") == -1) continue;\n      var imgObj = imgs[i].getAsFile();\n      var url = window.URL || window.webkitURL;\n      var src = url.createObjectURL(imgObj);\n      $.clearRect(0, 0, this.width, this.height);\n      loadImage(src, $, c);\n    }\n\n    p.classList.add(\"main\");\n    c.classList.add(\"img\");\n    p.contentEditable = \"true\";\n    c.contentEditable = \"true\";\n    elem.parentNode.insertBefore(c, elem.nextSibling);\n    c.parentNode.insertBefore(p, c.nextSibling);\n    p.focus();\n    e.preventDefault();\n  } else {\n    return;\n  }\n\n  ;\n}); // Drawing image and setting canvas width and height\n\nfunction loadImage(src, $, c) {\n  var img = new Image();\n\n  img.onload = function (e) {\n    c.width = this.width;\n    c.height = this.height;\n    $.drawImage(img, 0, 0);\n  };\n\n  img.src = src;\n}","map":{"version":3,"sources":["/Users/rehanchoudhury/Projects/type-writer/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById","window","addEventListener","e","elem","activeElement","imgs","clipboardData","items","c","createElement","p","$","getContext","files","length","classList","contains","undefined","i","type","indexOf","imgObj","getAsFile","url","URL","webkitURL","src","createObjectURL","clearRect","width","height","loadImage","add","contentEditable","parentNode","insertBefore","nextSibling","focus","preventDefault","img","Image","onload","drawImage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nwindow.addEventListener('paste', function(e){\n  \n var elem = document.activeElement,\n     imgs = e.clipboardData.items,\n     c = document.createElement(\"canvas\"),\n    //  c = <canvas></canvas>,\n    //  p = document.createElement(\"p\"),\n     p = <p></p>,\n\n     $ = c.getContext(\"2d\");\n       \n  \n//   detecting clipboard item image or not\n if (e.clipboardData.files.length > 0 && elem.classList.contains(\"main\")) {   \n//   Handaling clipboard event to pasta image to a new canvas next to\n//   current active element   \n     if(imgs == undefined) return false;\n    for (var i = 0; i < imgs.length; i++) {\n        if (imgs[i].type.indexOf(\"image\") == -1) continue;\n          var imgObj = imgs[i].getAsFile();\n          var url = window.URL || window.webkitURL;\n          var src = url.createObjectURL(imgObj);\n          $.clearRect(0,0,this.width,this.height);\n          loadImage(src,$,c);\n        }\n       p.classList.add(\"main\");\n       c.classList.add(\"img\")\n       p.contentEditable=\"true\";\n       c.contentEditable=\"true\";\n       elem.parentNode.insertBefore(c, elem.nextSibling);\n       c.parentNode.insertBefore(p, c.nextSibling);   \n       p.focus();\n       e.preventDefault();\n     \n  }\n  else {\n    return;\n  };\n  \n});\n  \n\n\n// Drawing image and setting canvas width and height\nfunction loadImage(src,$,c){\n  var img = new Image();\n  img.onload = function(e) {       \n     c.width = this.width;\n     c.height = this.height;  \n    $.drawImage(img,0,0);\n  };\n  img.src = src;\n}\n\n"]},"metadata":{},"sourceType":"module"}